setwd("F:/programming/lesson9.24/ESE5023_Assignment/Assignment3")
library(dplyr)
library(ggplot2)
library(tidyr)
Unseeded_Data <- c(1202.6, 830.1, 372.4, 345.5, 321.2, 244.3, 163.0, 147.8, 95.0, 87.0, 81.2, 68.5, 47.3, 41.1, 36.6, 29.0, 28.6, 26.3, 26.0, 24.4, 21.4, 17.3, 11.5, 4.9, 4.9, 1.0)
Seeded_Data <- c(2745.6, 1697.1, 1656.4, 978.0, 703.4, 489.1, 430.0, 334.1, 302.8, 274.7, 274.7, 255.0, 242.5, 200.7, 198.6, 129.6, 119.0, 118.3, 115.3, 92.4, 40.6, 32.7, 31.4, 17.5, 7.7, 4.1)
boxplot(cbind(Unseeded_Data,Seeded_Data))
hist(Unseeded_Data)
hist(Seeded_Data)
day <- array(data=1:26)
plot(Unseeded_Data~day)
plot(Seeded_Data~day)
#1.2
t.test(Unseeded_Data, Seeded_Data)
bone_Data <- read.delim2("bone.txt", head=TRUE)
bone_Data[1,2]
isotopic <- matrix(nrow=72, ncol=2)
isotopic[1.2]
for (i in 1:12) {
for (j in 1:6) {
k <- j+6*(i-1)
isotopic[k, 1] = bone_Data[i, 1]
isotopic[k, 2] = bone_Data[i, j+1]
}
}
colnames(isotopic)=c("Bone","Oxygen.isotopic.composition")
isotopic_new <- as_tibble(isotopic)
isotopic_new1 <- isotopic_new  %>%
mutate(OIC= as.numeric(Oxygen.isotopic.composition))
isotopic_new1 %>%
group_by(Bone) %>%
summarise(
count = n(),
mean_isotopic = mean(OIC, na.rm = TRUE),
sd_isotopic = sd(OIC, na.rm = TRUE)
)
ggplot(isotopic_new1, aes(x = Bone, y = OIC, fill = Bone)) +
geom_boxplot() +
theme_classic()
anova_one_way <- aov(OIC ~ Bone, data = isotopic_new1)
summary(anova_one_way)
TukeyHSD(anova_one_way)
vp_Data <- read.delim("problem3.txt", head=TRUE)
PVgroup <- vp_Data$Pregnant.vegetarians
PNVgroup <- vp_Data$Pregnant.nonvegetarians
mean(vp_Data$Pregnant.vegetarians, na.rm=T)
mean(vp_Data$Pregnant.nonvegetarians, na.rm=T)
hist(PVgroup)
hist(PNVgroup)
boxplot(cbind(PVgroup, PNVgroup))
t.test(PVgroup, PNVgroup)
vp_Data <- read.delim("problem3.txt", head=TRUE)
PVgroup <- vp_Data$Pregnant.vegetarians
PNVgroup <- vp_Data$Pregnant.nonvegetarians
mean(vp_Data$Pregnant.vegetarians, na.rm=T)
mean(vp_Data$Pregnant.nonvegetarians, na.rm=T)
hist(PVgroup)
hist(PNVgroup)
boxplot(cbind(PVgroup, PNVgroup))
t.test(PVgroup, PNVgroup)
temp_Data <- read.delim("problem4.txt", head=TRUE)
names(temp_Data)
temp_Data1 <- temp_Data%>%
mutate(Elevation..km.=Elevation..m./1000)
plot(Temperature..degrees.C. ~ Elevation..km., data=temp_Data1,
xlab = "Elevation",
ylab = "Temperature",
main = "Temperature vs Elevation",
pch = "+",
cex = 2,
col = "navy")
fit <- lm(Temperature..degrees.C. ~ Elevation..km., data=temp_Data1)
summary(fit)
abline(fit, lwd = 5, col = "red")
#5.1
RV_Data <- read.delim("problem5.txt", head=TRUE)
plot(Distance ~ Velocity, data=RV_Data,
xlab = "Velocity",
ylab = "Distance",
main = "Distance vs Velocity",
pch = "+",
cex = 2,
col = "navy")
#5.2
fit <- lm(Distance ~ Velocity, data=RV_Data)
summary(fit)
abline(fit, lwd = 5, col = "red")
#5.3
summary(fit)$coefficients
#explained by Yuan Li
library(MASS)
data(cpus)
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
library(leaps)
subset_result <- regsubsets(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train, nbest=2, nvmax = 6)
plot(subset_result, scale="bic")
#6.2
perf_predict <- predict(model_1,cpus_test)
plot(cpus_test$perf, perf_predict)
cor(cpus_test$perf, perf_predict)
# Mean predicted value
mean(perf_predict)
# Mean actual value
mean(cpus_test$perf)
# Relative mean bias
(mean(perf_predict) - mean(cpus_test$perf))/
mean(cpus_test$perf)*100
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
library(MASS)
data(cpus)
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
library(MASS)
data(cpus)
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
library(MASS)
data(cpus)
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
#6.1
sample_index <- sample(nrow(cpus),nrow(cpus)*0.80)
cpus_train <- cpus[sample_index,]
cpus_test  <- cpus[-sample_index,]
model_1 <- lm(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train)
summary(model_1)
library(leaps)
subset_result <- regsubsets(perf~syct+mmin+mmax+cach+chmin+chmax, data=cpus_train, nbest=2, nvmax = 6)
plot(subset_result, scale="bic")
perf_predict <- predict(model_1,cpus_test)
plot(cpus_test$perf, perf_predict)
cor(cpus_test$perf, perf_predict)
# Mean predicted value
mean(perf_predict)
# Mean actual value
mean(cpus_test$perf)
# Relative mean bias
(mean(perf_predict) - mean(cpus_test$perf))/
mean(cpus_test$perf)*100
#7.1
EX_Data <- read.delim("problem7.txt", head=TRUE)
CE2_Data <- EX_Data %>%
filter(NO == "CE2")
CE3_Data <- EX_Data %>%
filter(NO == "CE3")
sample1 <- CE2_Data$NO3
sample2 <- CE3_Data$NO3
t.test(sample1, sample2)
#7.2
anova_one_way <- aov(NO3 ~ NO, data = EX_Data)
summary(anova_one_way)
TukeyHSD(anova_one_way)
#7.3
vEX_Data <- read.delim("problem7_3.txt", head=TRUE)
names(vEX_Data)
fit <- lm (R_nit~Flow.rate, data = vEX_Data)
summary(fit)
plot(R_nit~Flow.rate, data = vEX_Data,
xlab = "Flow.rate",
ylab = "R_nit",
main = "R_nit vs Flow.rate",
pch = 20,
cex = 2,
col = "navy")
abline(fit, lwd = 5, col = "red")
